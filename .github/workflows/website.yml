# Simple workflow for deploying static content to GitHub Pages
name: Build and deploy website

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths: 
    - "docs/**"
    - "LICENSE.md"
    - "src/NeatMapper/CHANGELOG.md"
    - "src/NeatMapper.EntityFrameworkCore/CHANGELOG.md"
    - "src/NeatMapper.Transitive/CHANGELOG.md"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Copy NeatMapper core Changelog
        uses: canastro/copy-file-action@master
        with:
          source: "src/NeatMapper/CHANGELOG.md"
          target: "docs/_includes/NeatMapperChangelog.md"
          flags: "-f"
      - name: Copy NeatMapper EF Core Changelog
        uses: canastro/copy-file-action@master
        with:
          source: "src/NeatMapper.EntityFrameworkCore/CHANGELOG.md"
          target: "docs/_includes/NeatMapperEntityFrameworkCoreChangelog.md"
          flags: "-f"
      - name: Copy NeatMapper Transitive Changelog
        uses: canastro/copy-file-action@master
        with:
          source: "src/NeatMapper.Transitive/CHANGELOG.md"
          target: "docs/_includes/NeatMapperTransitiveChangelog.md"
          flags: "-f"
      - name: Copy License
        uses: canastro/copy-file-action@master
        with:
          source: "LICENSE.md"
          target: "docs/_includes/License.md"
          flags: "-f"
      - name: Setup Ruby
        uses: ruby/setup-ruby@bb0f760b6c925183520ee0bcc9c4a432a7c8c3c6 # v1.241.0
        with:
          working-directory: "docs"
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        working-directory: "docs"
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "docs/_site"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
